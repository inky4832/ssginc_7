
 MySQL8 강좌정리

 1. 환경설정

  -  https://dev.mysql.com/downloads/installer/ 다운로드 
  -  설치 3가지  ( MySQL, Workbench, samples )
     관리자 계정: root
          비번: 1234


 2. 참조문서 
   https://docs.oracle.com/cd/E17952_01/mysql-8.0-en/

 3. MySQL 접속방법

   1) 툴 이용
      - Workbench ( 자체적으로 설치가능 )
      - DBeaver.zip ( 다운로드 )
         http://dbeaver.io/download

   2) 프로그램 언어 ( 자바 )
      - JDBC ( Java DataBase Connectivity ) 기술
      - JDBC 특징
         DB 종류와 무관하게 연동 가능( DB에 독립적)
	 컴파일 checked 예외가 발생된다. ( 반드시 try~catch 또는 throws 해야 됨 )

 4. 실습에서 사용할 Database 생성 및 테이블 생성
   
    Database 명: testdb
    테이블 :
         수업에서 사용할 테이블:scott_mysql.sql	
			 
			   emp 테이블 ( 사원 테이블로서 사원 정보가 저장되어 있음 )
			       empno 컬럼 : 사원번호
			       ename 컬럼 : 사원명
			       job   컬럼 : 직업
			       mgr   컬럼 : 관리자 사원번호
			       hiredate 컬럼: 입사일
			       sal   컬럼 : 월급
			       comm 컬럼  : 커미션, job이 SALESMAN인 경우에만 값을 가짐.
			       deptno 컬럼: 부서번호

			   dept 테이블 ( 부서 테이블로서 부서 정보가 저장되어 있음)
			       deptno 컬럼: 부서번호
			       dname 컬럼:  부서명
			       loc 컬럼:    부서위치

			   salgrade 테이블
			       
			       grade 컬럼: sal 등급
			       losal 컬럼: 최저 sal
			       hisal 컬럼: 최고 sal

	 워크샵에서 사용할 테이블:MySQL용_SQL워크샵스크립트.txt


5. 데이터베이스 vs 데이터베이스 관리 시스템 ( DBMS )

   1) 데이터베이스 ( DataBase : DB )
     - 개인, 회사, 관공서등에서 업무적으로 필요한 데이터를 의미.
     예> 사원정보(사원 DB)
        부서정보(부서 DB)
   
   2) 데이터베이스 관리 시스템 ( DataBase Management System : DBMS )
     - 데이터베이스(DB)를 전문적이고 효율적으로 관리하기 위한 S/W 의미.
     - 관리방법 ?

           CRUD 가능 ( Create: 데이터 생성,  SQL문중에서 insert 문 이용.
	              Read  : 데이터 조회,  SQL문중에서 select 문 이용.
		      Update: 데이터 수정,  SQL문중에서 update 문 이용.
		      Delete: 데이터 삭제,  SQL문중에서 delete 문 이용. )

		      insert/delete/update 문: DML ( Data Manipulation Language, 데이터 조작어)
		                              확정/취소 작업: DTL ( Data Transaction Language)
					      확정: commit 문
					      취소: rollback 문

		      select 문: DQL 문 ( Data Query Language )

	  보안(인증/인가) 
	     인증: Authentication ( 예> 우리 회사 사람이야 ? )
	     인가: Ahuthorization ( 예> 이걸 볼 권한이 있어? )
	   
	    ==> 사용자 생성 및 권한 할당

    - 데이터 저장 방법에 따른 DB 종류 ?
         계층형 DB
	 망형 DB
	 객체지향 DB
	 ..
	 관계형 DB ( Relational DataBase: RDB ) : 데이터를 행(레코드)/열(컬럼)로 구성된 2차원 테이블로 관리
     
    ==> 데이터베이스와 데이터베이스 관리 시스템을 데이터베이스 용어로 혼용해서 많이 사용됨.

6.  관계형 DB ( Relational DataBase: RDB )
  
    - 현업에서 사용되는 RDB와 대립되는 구조를 가진 형태: NoSQL  ( Not only SQL, 비정형 구조, {key:value} 구조 )
                                            종류: MongoDB, Casandra, ...
  1) 개념
     행(레코드)/열(컬럼)로 구성된 2차원 테이블로 관리

  2) 종류
     - MySQL ( MariaDB )
     - Oracle
     - MSSQL
     - DB2
      ..

7. SQL ( Structured Query Language )

 1) 개요 및 특징
   - RDB 에서 사용하는 프로그램 언어.
   - 식별자로 구성 ( 예약어 및 사용자 지정 식별자 사용 가능 )
   - 대소문자 구별 안함 ( select 와 SELECT 동일 )
                   ( 'A' 와 'a' 는 MySQL 동일,  Oracle에서는 다르게 처리 ) 
   
   - 자바는 'A'와 "AAA" 구별해서 사용했으나
     SQL문에서는 무조건 'A', 'AAA' , '2024-02-20' 사용하자.
     ""는 별칭(alias)에서만 사용하자.

   - 연산자 
   - 조건문
   - 함수 ( 메서드 역할 )

 2) SQL 종류1 ( DBMS 종류에 따라서 )
  
     가. ANSI SQL ( 표준화된 SQL )
       - 모든 RDB에서 사용 가능한 SQL 의미.

     나. 비 ANSI SQL ( 표준화 안된 SQL )
       - 표준화되지 않은 SQL문이기 때문에 특정 RDB에서만 사용 가능.
        예> MySQL에서만 사용가능한 SQL 문법이 있음.
       - 함수

 2) SQL 종류2 ( 기능,역할 ) -외우기

   가. 데이터 조회 ( DQL: Data Query Language )
      - query 문이라고 하고 select 문이 담당.

   나. 데이터 조작 ( 삽입,수정,삭제, DML: Data Manipulation Language )
      - 데이터 생성: insert 문
      - 데이터 수정: update 문
      - 데이터 삭제: delete 문

   다. DML 확정/취소 ( Data Transaction Language : DTL ,
                    Transaction Control Language : TCL )

       확정: commit 문
       취소: rollback 문

   라. 데이터를 관리할 때 필요한 객체 ( 테이블,인덱스,뷰,시퀀스, 사용자, 권한 ) 조작 ( 생성, 수정, 삭제 )
         ==> DDL 문 ( Data Definition Language )  

       객체 생성: create 문
       객체 수정: alter 문
       객체 삭제: drop 문

 8. select 문

   1) 기능
     - 조회

   2) 기능 3가지

      - projection : 컬럼(열)을 선택
      - selection  : 레코드(행)을 선택
      - join       : 2 개 이상의 테이블에서 연결(조인)해서 원하는 컬럼(projection) 과 
                    레코드(행, selection) 처리.

   3) 문법

      select 절 : 컬럼명,컬럼명2,...
                  *  ( 모든 컬럼의미 )
		 컬럼명+100  ( 연산가능 )
		 함수(컬럼명) ( 예> lower(ename))
		 distinct 컬럼명 ( 중복제거 )
		 리터럴값 ( 예> '홍길동' )
		 컬럼명 as 별칭  ( select 실행후 보여지는 컬럼 헤더값, "별칭" 사용가능, as 생략 가능 )

      from 절  : 테이블명
   
 9. null 값

   1) 정의
     - 테이블의 컬럼에 값이 없는것.
       select 하면 값이 비워져서 보임.

   2) 특징
      - 기본적으로 테이블의 컬럼은 null 값을 가질 수 있다.
        강제적으로 null 값을 허용하지 않도록 지정할 수 있다. 
	(이유는 무결성을 보장하기 위한것으로 제약조건(not null 제약조건 타입)을 사용한다.)
      - null 값을 가진 컬럼을 연산하면 결과는 null 로 반환된다. (**************)
       예> 사원연봉

          select empno, ename, sal , (sal*12) + comm   as 연봉,   (sal*12) +  ifnull( comm, 0) as 연봉2   
          from emp;

       제대로 값을 구하기 위해서 ifnull( 컬럼, 기본값 ) 사용한다. ( Oracle 에서는 NVL(컬럼, 기본값 ) 사용 )

     - null 값 및 부정 찾기 :  is null 연산자 사용 ( 자바에서는 s == null )
                           is not null 연산자  

     - 정렬시 null 값을 가장 작은 값으로 처리한다.  ( Oracle 에서는 가장 큰 값으로 처리함 )


10. 제약조건 ( Constraints ) - 외우기
  
   - 컬럼단위로 설정

   1) primary key (pk)제약조건 타입 ( 제약조건명과 다르다. 제약조건명은 사용자가 임의로 지정할 수 있음 )
      - 기본키 제약조건 이라고 부름.
      - 지정된 컬럼은 반드시 값을 가져야 되고 ( not null 제약조건, null 허용 안함 )
                  그 값이 유일한 값(unique 제약조건)을 가져야 된다.
      - 목적: 레코드 식별 예> emp의 empno, dept의 deptno
      - 테이블 당 하나만 설정 가능.	
        복합컬럼이 가능하다.
      - 자동으로 index 객체가 생성된다. 이유는 검색속도 향상.
        그런데 남용하면 안됨. 이유는 반드시 정렬이 필요하고 B트리의 balance 맞추는 작업이 추가될 수 있기
	때문에 성능이 index 사용때보다 더 떨어질 수 있다.

   2) unique (uk)제약조건 타입
      - 지정된 컬럼은 반드시 유일한 값을 가져야 된다. ( null 허용. 즉 값을 안가져도 됨 )
      - 테이블 당 여러개 설정 가능.
        복합컬럼이 가능하다.
      - 자동으로 index 객체가 생성된다. 이유는 검색속도 향상.
          그런데 남용하면 안됨. 이유는 반드시 정렬이 필요하고 B트리의 balance 맞추는 작업이 추가될 수 있기
	때문에 성능이 index 사용때보다 더 떨어질 수 있다.
	
   3) check (ck)제약조건 타입
      - 프로그램 언어(자바)의 비즈니스 로직 관련 제약조건임.
        예> 성별컬럼
	   ------
	    남, 여 ( 가능 )
	    남자, 여자
	    M, F
	    male, female

            나이컬럼 ( age < 100 )
	    ---------
	    1
	    2
	    1000

            중학교학년컬럼
	    -----------
           1학년,2학년,3학년 (가능 )
	   4학년 ( 불가 )

	
   4) foreign key (fk) 제약조건 타입
      - 참조키(외래키) 라고 부름.
      - 조인(join)할 때 사용되는 제약조건임.
      - master의 컬럼중에서 기본키로 설정된 컬럼 또는 unique로 설정된 컬럼만 참조할 수 있다.
      - fk가 가질 수 있는 값은 master의 기본키(unique)컬럼이 가지고 있는 값 또는 null 값만 가질 수 있다.
      - master의 기본키 컬럼명과 fk의 컬럼명은 달라도 된다. ( 권장은 동일하게 지정한다. )

   5) not null (nn)제약조건 타입
     - 컬럼에 null 값을 허용하지 않는 제약조건.

   * 주의
    not null 제약조건은 변경(modify)한다고 말하고
    나머지 4개는 제약조건을 추가(add)한다고 말한다.
    제약조건을 설정하는 문법이 다르다.
