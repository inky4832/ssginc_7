
강사명: 인경열
이메일: inky4832@daum.net


1. 회원가입
 
  - 구글
  - github
  - 오라클
    http://www.oracle.com

2. 환경설정

  1) JDK ( Java Development Kit ) 설치
    - C:\Program Files\Java\jdk-17 에 기본적으로 설치됨.
    - 환경변수 설정
      시작 > 마우스 오른쪽 클릭 > 시스템 > 고급 시스템 설정 > 고급 탭 > 환경변수 

      JAVA_HOME=C:\Program Files\Java\jdk-17  <=== JDK의 홈디렉터리 경로 설정
      PATH=%JAVA_HOME%\bin;기본PATH                                   <=== 윈도우의 프로그램에 명령어 경로 설정
           C:\Program Files\Java\jdk-17\bin;기본PATH   

      * 주요 명령어 2개

       javac.exe ( 컴파일하는 명령어, 컴파일러(compiler) 라고 부름 )

       java.exe  ( 실행하는 명령어,  인터프리터(interpreter) 라고 부름 )


      * 자바 실행 순서

      소스 파일( *.java 예> Test.java )
         |
      컴파일 작업 ( 컴파일러 이용: javac.exe )
                
		문법:  javac Test.java  <=== Test.class 파일이 생성됨 

         |
      실행 작업 ( 인터프리터 이용: java.exe )

                문법:  java Test        <=== Test 클래스가 실행되어 결과가 나옴.


      * JDK 설치시 설치되는 JVM ( Java Virtual Machine )


         *.class
        -------------
         JVM 
        --------------
          OS ( Window, Linux, Mac )
         -------
	   H/W
   
       JDK ( Java Development Kit     : 자바개발 환경 ) <==== 실제로 자바어플리케이션 개발하는 개발자 환경
                                                          JRE +  API + 개발도구( javac, ... ) 

       JRE ( Java RunTime Environment : 자바실행 환경 ) <==== 실제로 자바어플리케이션을 실행하는 일반 사용자 환경.
                                                          JVM + API

       자바 API : 자바에서 미리 만들어서 제공된 클래스 파일들을 의미.
                압축해서 제공됨. ( *.jar 형식 )
             
	       C:\Program Files\Java\jdk-17\lib\src.zip 파일이 API의 소스파일.

             * 자바의 압축 파일 3가지
  
               -jar
	         => 일반적인 SE 환경의 압축파일
                    예> *.jar
	       -war
	         => 일반적인 EE 환경의 압축파일
                    예> *.war
	       -ear
                 => jar + war 환경의 압축파일
                    예> *.ear

      자바 API 문서 :  어떤 자바 API가 있는지 알려주는 메뉴얼.
                    웹으로 제공됨.
           https://docs.oracle.com/en/java/javase/17/docs/api/index.html



   2) 개발툴 ( IDE )
     - 인텔리제이 (
       http://www.jetbrains.com

     - 이클립스
       http://www.eclipse.org
       인스톨 프로그램 아님. 압축 풀면 설치됨.
       C:\java_study\eclipse\workspace 생성  > eclipse.exe 실행
       
       eclipse 실행후 추가작업
        가. 한글 인코딩 설정 (utf-8)
           elcipse의 window항목 > preference > General > workspace 에서 Text File Encoding 에서
	   UTF-8로 설정.

	나. 글꼴 설정
	   elcipse의 window항목 > preference > General > Apper~ > Color&Fonts > Basic > Text Font 에서 설정

        다. 컴파일러 버전 변경
            elcipse의 window항목 > preference > Java > Compiler 에서 현재 21 --> 17로 변경.

        라. JRE 변경

	    elcipse의 window항목 > preference > installed JRE > 기존 JRE 삭제.

3. 자바 특징
  - OOP( Object Oriented Programming )
  - 플랫폼 독립적 ( OS 독립적 )
  - 개발자가 더 이상 메모리를 관리하지 않는다. ( GC: Garbage Collector )

4. 자바 개발 환경 3가지 ( 기준: 디바이스(장치))

   1) Java SE ( Java Standard Edition )
      - 일반 PC 	
      - 자바 기술
      - 구축방법: JDK 설치

   2) Java EE ( Java Enterprise Edition )
      - 서버(웹 서버)
      - 웹페이지 개발 기술 ( Servlet & JSP )
      - 구축방법: Tomcat 설치

   3) Java ME ( Java Micro Edition )
      - 휴대용 장치 ( PDA, 셋탑박스 )


5. 이클립스 프로젝트 생성

  - module 는 체크 안함 (****************)
  
6. 자바 클래스 작성 ( *.java )

   - 반드시 첫글자는 영문자이고 또는 _ (언더바) 또는 $ 만 가능하다.
     이후에 숫자지정은 가능.
   
   - 대소문자 구별됨.
   - 특수문자는 _ (언더바) 또는 $ 2개만 가능.
   - 한글은 가능하지만 권장안함.
   - 자바클래스 첫글자는 반드시 대문자로 지정한다. ( 권장 )
  
   - 문법:
   
        public class 클래스명{


	}

   - 반드시 지정된 클래스명으로 파일을 저장해야 된다. ( 클래스명.java )
   - 자바에서는 클래스가 프로그램의 최소 단위이다.

7.  main 메서드

   - 하나의 자바 어플리케이션을 작성할때 반드시 존재하는 메서드임. (*************)

8. 이클립스 단축키 (********)

   - 저장: ctrl + s
   - 단일문장 주석: ctrl + /
   - 한줄 복사: ctrl + alt + 화살표키
   - 줄바꿈: alt + 화살표키
   - 한줄 삭제: ctrl + d
   - 이전 작업 취소: ctrl + z
   - sysout + ctrl + spacebar 하면 자동으로 System.out.println() 생성.
   - 코드 자동 완성: ctrl + spacebar